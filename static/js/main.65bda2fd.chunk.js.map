{"version":3,"sources":["_actions/user_actions.js","_actions/types.js","components/Config.js","hoc/auth.js","components/views/LandingPage/LandingPage.js","components/views/LoginPage/LoginPage.js","components/views/RegisterPage/RegisterPage.js","components/views/NavBar/Sections/LeftMenu.js","components/views/NavBar/Sections/RightMenu.js","components/views/NavBar/NavBar.js","components/views/Footer/Footer.js","components/views/VideoUploadPage/VideoUploadPage.js","components/views/VideoDetailPage/Sections/LikeDislikes.js","components/views/VideoDetailPage/Sections/SingleComment.js","components/views/VideoDetailPage/Sections/ReplyComment.js","components/views/VideoDetailPage/Sections/Comment.js","components/views/VideoDetailPage/Sections/SideVideo.js","components/views/VideoDetailPage/Sections/Subscribe.js","components/views/VideoDetailPage/VideoDetailPage.js","components/views/SubscriptionPage/SubscriptionPage.js","components/App.js","serviceWorker.js","_reducers/index.js","_reducers/user_reducer.js","index.js"],"names":["auth","type","payload","axios","get","then","response","data","SpecificComponent","option","adminRoute","AuthenticationCheck","props","user","useSelector","state","dispatch","useDispatch","useEffect","isAuth","isAdmin","history","push","LandingPage","useState","Video","setVideo","Axios","success","videos","alert","renderCards","map","video","i","minutes","Math","floor","duration","seconds","writer","lg","md","xs","key","href","_id","style","position","width","src","thumbnail","alt","className","avatar","image","title","description","name","marginLeft","views","moment","createdAt","format","margin","level","gutter","Title","Typography","withRouter","rememberMeChecked","localStorage","getItem","formErrorMessage","setFormErrorMessage","rememberMe","setRememberMe","handleRememberMe","initialEmail","initialValues","email","password","validationSchema","Yup","shape","required","min","onSubmit","values","setSubmitting","setTimeout","dataToSubmit","post","loginUser","loginSuccess","window","setItem","userId","id","removeItem","catch","err","touched","errors","isSubmitting","dirty","handleChange","handleBlur","handleSubmit","handleReset","Item","prefix","color","placeholder","value","onChange","onBlur","fontSize","border","padding","borderRadius","checked","float","htmlType","minWidth","disabled","formItemLayout","labelCol","span","sm","wrapperCol","tailFormItemLayout","offset","RegisterPage","lastName","confirmPassword","oneOf","lastname","unix","registerUser","errmsg","label","hasFeedback","validateStatus","onClick","Menu","SubMenu","ItemGroup","LeftMenu","mode","userData","status","NavBar","visible","setVisible","zIndex","placement","closable","onClose","Footer","height","display","flexDirection","alignItems","justifyContent","PrivateOptions","CategoryOptions","VideoUploadPage","VideoTitle","setVideoTitle","Description","setDescription","Private","setPrivate","Category","setCategory","FilePath","setFilePath","Duration","setDuration","ThumbnailPath","setThumbnailPath","e","preventDefault","variables","privacy","filePath","category","message","maxWidth","textAlign","marginBottom","onDrop","files","formData","FormData","append","header","variable","url","fileName","fileDuration","multiple","maxSize","getRootProps","getInputProps","currentTarget","item","index","size","LikeDislikes","videoId","commentId","Likes","setLikes","LikeAction","setLikeAction","Dislikes","setDislikes","DisLikeAction","setDisLikeAction","likes","length","like","dislikes","dislike","theme","paddingLeft","cursor","SingleComment","postId","comment","refreshFunction","OpenReply","setOpenReply","CommentValue","setCommentValue","content","responseTo","result","actions","author","ReplyComment","commentLists","parentCommentId","ChildCommentNumber","setChildCommentNumber","OpenReplyComments","setOpenReplyComments","commentNumber","renderReplyComment","Comment","commentValue","SideVideo","sideVideos","setSideVideos","renderSideVideo","marginTop","marginRight","Subscribe","userTo","userFrom","SubscribeNumber","setSubscribeNumber","Subscribed","setSubscribed","subscribeNumber","subscribedVariable","subscribed","backgroundColor","fontWeight","textTransform","VideoDetailPage","match","params","VideoDetail","setVideoDetail","Comments","setComments","videoDetail","comments","subscribeButton","controls","Meta","newComment","concat","SubscriptionPage","subscriptionVariables","App","fallback","paddingTop","minHeight","exact","path","component","Auth","LoginPage","Boolean","location","hostname","rootReducer","combineReducers","action","register","loginSucces","createStoreWithMiddleware","applyMiddleware","promiseMiddleware","ReduxThunk","createStore","ReactDOM","render","store","Reducer","__REDUX_DEVTOOLS_EXTENSION__","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.65bda2fd.chunk.js","sourcesContent":["import axios from 'axios';\r\nimport {\r\n    LOGIN_USER,\r\n    REGISTER_USER,\r\n    AUTH_USER,\r\n    LOGOUT_USER,\r\n} from './types';\r\nimport { USER_SERVER } from '../components/Config.js';\r\n\r\nexport function registerUser(dataToSubmit){\r\n    const request = axios.post(`${USER_SERVER}/register`,dataToSubmit)\r\n        .then(response => response.data);\r\n    \r\n    return {\r\n        type: REGISTER_USER,\r\n        payload: request\r\n    }\r\n}\r\n\r\nexport function loginUser(dataToSubmit){\r\n    const request = axios.post(`${USER_SERVER}/login`,dataToSubmit)\r\n                .then(response => response.data);\r\n\r\n    return {\r\n        type: LOGIN_USER,\r\n        payload: request\r\n    }\r\n}\r\n\r\nexport function auth(){\r\n    const request = axios.get(`${USER_SERVER}/auth`)\r\n    .then(response => response.data);\r\n\r\n    return {\r\n        type: AUTH_USER,\r\n        payload: request\r\n    }\r\n}\r\n\r\nexport function logoutUser(){\r\n    const request = axios.get(`${USER_SERVER}/logout`)\r\n    .then(response => response.data);\r\n\r\n    return {\r\n        type: LOGOUT_USER,\r\n        payload: request\r\n    }\r\n}\r\n\r\n","export const LOGIN_USER = 'login_user';\r\nexport const REGISTER_USER = 'register_user';\r\nexport const AUTH_USER = 'auth_user';\r\nexport const LOGOUT_USER = 'logout_user';\r\n","//SERVER ROUTES\r\nexport const USER_SERVER = '/api/users';\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { useEffect } from 'react';\r\nimport { auth } from '../_actions/user_actions';\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nexport default function (SpecificComponent, option, adminRoute = null) {\r\n    function AuthenticationCheck(props) {\r\n\r\n        let user = useSelector(state => state.user);\r\n        const dispatch = useDispatch();\r\n\r\n        useEffect(() => {\r\n            //To know my current status, send Auth request \r\n            dispatch(auth()).then(response => {\r\n                //Not Loggined in Status \r\n                if (!response.payload.isAuth) {\r\n                    if (option) {\r\n                        props.history.push('/login')\r\n                    }\r\n                    //Loggined in Status \r\n                } else {\r\n                    //supposed to be Admin page, but not admin person wants to go inside\r\n                    if (adminRoute && !response.payload.isAdmin) {\r\n                        props.history.push('/')\r\n                    }\r\n                    //Logged in Status, but Try to go into log in page \r\n                    else {\r\n                        if (option === false) {\r\n                            props.history.push('/')\r\n                        }\r\n                    }\r\n                }\r\n            })\r\n\r\n        }, [])\r\n\r\n        return (\r\n            <SpecificComponent {...props} user={user} />\r\n        )\r\n    }\r\n    return AuthenticationCheck\r\n}\r\n\r\n\r\n","import { Avatar, Col, Row } from 'antd';\r\nimport Meta from 'antd/lib/card/Meta';\r\nimport Title from 'antd/lib/typography/Title';\r\nimport Axios from 'axios';\r\nimport React, { useEffect, useState } from 'react'\r\nimport moment from 'moment'\r\n\r\nfunction LandingPage() {\r\n    const [Video, setVideo] = useState([])\r\n    useEffect(() => {\r\n        Axios.get('/api/video/getVideos')\r\n        .then(response => {\r\n            if(response.data.success) {\r\n                setVideo(response.data.videos)\r\n            } else {\r\n                alert('비디오 가져오기를 실패 했습니다.')\r\n            }\r\n        })\r\n    },[])\r\n\r\n    const renderCards = Video.map((video , i) => {\r\n        let minutes = Math.floor(video.duration/60)\r\n        let seconds = Math.floor((video.duration -  minutes*60))\r\n        if(video.writer) {\r\n            return (\r\n                <Col lg={6} md={8} xs={24} key={i}>\r\n                    <a href={`/video/${video._id}`}>\r\n                        <div style={{position:'relative'}}>\r\n                            <img style={{width:'100%'}} src={`http://localhost:5000/${video.thumbnail}`} alt=\"thunmbnail\" />\r\n                            <div className=\"duration\">\r\n                                <span>{minutes} : {seconds}</span>\r\n                            </div>\r\n                        </div>\r\n                    </a>\r\n                    <br/>\r\n                    <Meta avatar={<Avatar src={video.writer.image} />} title={video.title} description=\"\" />\r\n                    <span>{video.writer.name}</span>\r\n                    <br />\r\n            <span style={{marginLeft:'3rem' }}>{video.views} views</span> - <span>{moment(video.createdAt).format(\"MMM Do YY\")}</span>\r\n                </Col>\r\n            )\r\n        } else {\r\n            return (\r\n                null\r\n            )\r\n        }\r\n    })\r\n\r\n    return (\r\n            <div style={{width: '85%' , margin:'3rem auto'}}>\r\n                <Title level={2}>Recommended</Title>\r\n                <hr/>\r\n                <Row gutter={[32,16]}>\r\n                    {renderCards}\r\n                </Row>\r\n            </div>\r\n    )\r\n}\r\n\r\nexport default LandingPage\r\n","import React, { useState } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { loginUser } from \"../../../_actions/user_actions\";\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { Form, Icon, Input, Button, Checkbox, Typography } from 'antd';\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nconst { Title } = Typography;\r\n\r\nfunction LoginPage(props) {\r\n  const dispatch = useDispatch();\r\n  const rememberMeChecked = localStorage.getItem(\"rememberMe\") ? true : false;\r\n\r\n  const [formErrorMessage, setFormErrorMessage] = useState('')\r\n  const [rememberMe, setRememberMe] = useState(rememberMeChecked)\r\n\r\n  const handleRememberMe = () => {\r\n    setRememberMe(!rememberMe)\r\n  };\r\n\r\n  const initialEmail = localStorage.getItem(\"rememberMe\") ? localStorage.getItem(\"rememberMe\") : '';\r\n\r\n  return (\r\n    <Formik\r\n      initialValues={{\r\n        email: initialEmail,\r\n        password: '',\r\n      }}\r\n      validationSchema={Yup.object().shape({\r\n        email: Yup.string()\r\n          .email('Email is invalid')\r\n          .required('Email is required'),\r\n        password: Yup.string()\r\n          .min(6, 'Password must be at least 6 characters')\r\n          .required('Password is required'),\r\n      })}\r\n      onSubmit={(values, { setSubmitting }) => {\r\n        setTimeout(() => {\r\n          let dataToSubmit = {\r\n            email: values.email,\r\n            password: values.password\r\n          };\r\n\r\n          dispatch(loginUser(dataToSubmit))\r\n            .then(response => {\r\n              if (response.payload.loginSuccess) {\r\n                window.localStorage.setItem('userId', response.payload.userId);\r\n                if (rememberMe === true) {\r\n                  window.localStorage.setItem('rememberMe', values.id);\r\n                } else {\r\n                  localStorage.removeItem('rememberMe');\r\n                }\r\n                props.history.push(\"/\");\r\n              } else {\r\n                setFormErrorMessage('Check out your Account or Password again')\r\n              }\r\n            })\r\n            .catch(err => {\r\n              setFormErrorMessage('Check out your Account or Password again')\r\n              setTimeout(() => {\r\n                setFormErrorMessage(\"\")\r\n              }, 3000);\r\n            });\r\n          setSubmitting(false);\r\n        }, 500);\r\n      }}\r\n    >\r\n      {props => {\r\n        const {\r\n          values,\r\n          touched,\r\n          errors,\r\n          dirty,\r\n          isSubmitting,\r\n          handleChange,\r\n          handleBlur,\r\n          handleSubmit,\r\n          handleReset,\r\n        } = props;\r\n        return (\r\n          <div className=\"app\">\r\n\r\n            <Title level={2}>Log In</Title>\r\n            <form onSubmit={handleSubmit} style={{ width: '350px' }}>\r\n\r\n              <Form.Item required>\r\n                <Input\r\n                  id=\"email\"\r\n                  prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n                  placeholder=\"Enter your email\"\r\n                  type=\"email\"\r\n                  value={values.email}\r\n                  onChange={handleChange}\r\n                  onBlur={handleBlur}\r\n                  className={\r\n                    errors.email && touched.email ? 'text-input error' : 'text-input'\r\n                  }\r\n                />\r\n                {errors.email && touched.email && (\r\n                  <div className=\"input-feedback\">{errors.email}</div>\r\n                )}\r\n              </Form.Item>\r\n\r\n              <Form.Item required>\r\n                <Input\r\n                  id=\"password\"\r\n                  prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n                  placeholder=\"Enter your password\"\r\n                  type=\"password\"\r\n                  value={values.password}\r\n                  onChange={handleChange}\r\n                  onBlur={handleBlur}\r\n                  className={\r\n                    errors.password && touched.password ? 'text-input error' : 'text-input'\r\n                  }\r\n                />\r\n                {errors.password && touched.password && (\r\n                  <div className=\"input-feedback\">{errors.password}</div>\r\n                )}\r\n              </Form.Item>\r\n\r\n              {formErrorMessage && (\r\n                <label ><p style={{ color: '#ff0000bf', fontSize: '0.7rem', border: '1px solid', padding: '1rem', borderRadius: '10px' }}>{formErrorMessage}</p></label>\r\n              )}\r\n\r\n              <Form.Item>\r\n                <Checkbox id=\"rememberMe\" onChange={handleRememberMe} checked={rememberMe} >Remember me</Checkbox>\r\n                <a className=\"login-form-forgot\" href=\"/reset_user\" style={{ float: 'right' }}>\r\n                  forgot password\r\n                  </a>\r\n                <div>\r\n                  <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\" style={{ minWidth: '100%' }} disabled={isSubmitting} onSubmit={handleSubmit}>\r\n                    Log in\r\n                </Button>\r\n                </div>\r\n                Or <a href=\"/register\">register now!</a>\r\n              </Form.Item>\r\n            </form>\r\n          </div>\r\n        );\r\n      }}\r\n    </Formik>\r\n  );\r\n};\r\n\r\nexport default withRouter(LoginPage);\r\n\r\n\r\n","import React from \"react\";\r\nimport moment from \"moment\";\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { registerUser } from \"../../../_actions/user_actions\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nimport {\r\n  Form,\r\n  Input,\r\n  Button,\r\n} from 'antd';\r\n\r\nconst formItemLayout = {\r\n  labelCol: {\r\n    xs: { span: 24 },\r\n    sm: { span: 8 },\r\n  },\r\n  wrapperCol: {\r\n    xs: { span: 24 },\r\n    sm: { span: 16 },\r\n  },\r\n};\r\nconst tailFormItemLayout = {\r\n  wrapperCol: {\r\n    xs: {\r\n      span: 24,\r\n      offset: 0,\r\n    },\r\n    sm: {\r\n      span: 16,\r\n      offset: 8,\r\n    },\r\n  },\r\n};\r\n\r\nfunction RegisterPage(props) {\r\n  const dispatch = useDispatch();\r\n  return (\r\n\r\n    <Formik\r\n      initialValues={{\r\n        email: '',\r\n        lastName: '',\r\n        name: '',\r\n        password: '',\r\n        confirmPassword: ''\r\n      }}\r\n      validationSchema={Yup.object().shape({\r\n        name: Yup.string()\r\n          .required('Name is required'),\r\n        lastName: Yup.string()\r\n          .required('Last Name is required'),\r\n        email: Yup.string()\r\n          .email('Email is invalid')\r\n          .required('Email is required'),\r\n        password: Yup.string()\r\n          .min(6, 'Password must be at least 6 characters')\r\n          .required('Password is required'),\r\n        confirmPassword: Yup.string()\r\n          .oneOf([Yup.ref('password'), null], 'Passwords must match')\r\n          .required('Confirm Password is required')\r\n      })}\r\n      onSubmit={(values, { setSubmitting }) => {\r\n        setTimeout(() => {\r\n\r\n          let dataToSubmit = {\r\n            email: values.email,\r\n            password: values.password,\r\n            name: values.name,\r\n            lastname: values.lastname,\r\n            image: `http://gravatar.com/avatar/${moment().unix()}?d=identicon`\r\n          };\r\n\r\n          dispatch(registerUser(dataToSubmit)).then(response => {\r\n            if (response.payload.success) {\r\n              props.history.push(\"/login\");\r\n            } else {\r\n              alert(response.payload.err.errmsg)\r\n            }\r\n          })\r\n\r\n          setSubmitting(false);\r\n        }, 500);\r\n      }}\r\n    >\r\n      {props => {\r\n        const {\r\n          values,\r\n          touched,\r\n          errors,\r\n          dirty,\r\n          isSubmitting,\r\n          handleChange,\r\n          handleBlur,\r\n          handleSubmit,\r\n          handleReset,\r\n        } = props;\r\n        return (\r\n          <div className=\"app\">\r\n            <h2>Sign up</h2>\r\n            <Form style={{ minWidth: '375px' }} {...formItemLayout} onSubmit={handleSubmit} >\r\n\r\n              <Form.Item required label=\"Name\">\r\n                <Input\r\n                  id=\"name\"\r\n                  placeholder=\"Enter your name\"\r\n                  type=\"text\"\r\n                  value={values.name}\r\n                  onChange={handleChange}\r\n                  onBlur={handleBlur}\r\n                  className={\r\n                    errors.name && touched.name ? 'text-input error' : 'text-input'\r\n                  }\r\n                />\r\n                {errors.name && touched.name && (\r\n                  <div className=\"input-feedback\">{errors.name}</div>\r\n                )}\r\n              </Form.Item>\r\n\r\n              <Form.Item required label=\"Last Name\">\r\n                <Input\r\n                  id=\"lastName\"\r\n                  placeholder=\"Enter your Last Name\"\r\n                  type=\"text\"\r\n                  value={values.lastName}\r\n                  onChange={handleChange}\r\n                  onBlur={handleBlur}\r\n                  className={\r\n                    errors.lastName && touched.lastName ? 'text-input error' : 'text-input'\r\n                  }\r\n                />\r\n                {errors.lastName && touched.lastName && (\r\n                  <div className=\"input-feedback\">{errors.lastName}</div>\r\n                )}\r\n              </Form.Item>\r\n\r\n              <Form.Item required label=\"Email\" hasFeedback validateStatus={errors.email && touched.email ? \"error\" : 'success'}>\r\n                <Input\r\n                  id=\"email\"\r\n                  placeholder=\"Enter your Email\"\r\n                  type=\"email\"\r\n                  value={values.email}\r\n                  onChange={handleChange}\r\n                  onBlur={handleBlur}\r\n                  className={\r\n                    errors.email && touched.email ? 'text-input error' : 'text-input'\r\n                  }\r\n                />\r\n                {errors.email && touched.email && (\r\n                  <div className=\"input-feedback\">{errors.email}</div>\r\n                )}\r\n              </Form.Item>\r\n\r\n              <Form.Item required label=\"Password\" hasFeedback validateStatus={errors.password && touched.password ? \"error\" : 'success'}>\r\n                <Input\r\n                  id=\"password\"\r\n                  placeholder=\"Enter your password\"\r\n                  type=\"password\"\r\n                  value={values.password}\r\n                  onChange={handleChange}\r\n                  onBlur={handleBlur}\r\n                  className={\r\n                    errors.password && touched.password ? 'text-input error' : 'text-input'\r\n                  }\r\n                />\r\n                {errors.password && touched.password && (\r\n                  <div className=\"input-feedback\">{errors.password}</div>\r\n                )}\r\n              </Form.Item>\r\n\r\n              <Form.Item required label=\"Confirm\" hasFeedback>\r\n                <Input\r\n                  id=\"confirmPassword\"\r\n                  placeholder=\"Enter your confirmPassword\"\r\n                  type=\"password\"\r\n                  value={values.confirmPassword}\r\n                  onChange={handleChange}\r\n                  onBlur={handleBlur}\r\n                  className={\r\n                    errors.confirmPassword && touched.confirmPassword ? 'text-input error' : 'text-input'\r\n                  }\r\n                />\r\n                {errors.confirmPassword && touched.confirmPassword && (\r\n                  <div className=\"input-feedback\">{errors.confirmPassword}</div>\r\n                )}\r\n              </Form.Item>\r\n\r\n              <Form.Item {...tailFormItemLayout}>\r\n                <Button onClick={handleSubmit} type=\"primary\" disabled={isSubmitting}>\r\n                  Submit\r\n                </Button>\r\n              </Form.Item>\r\n            </Form>\r\n          </div>\r\n        );\r\n      }}\r\n    </Formik>\r\n  );\r\n};\r\n\r\n\r\nexport default RegisterPage\r\n","import React from 'react';\r\nimport { Menu } from 'antd';\r\nconst SubMenu = Menu.SubMenu;\r\nconst MenuItemGroup = Menu.ItemGroup;\r\n\r\nfunction LeftMenu(props) {\r\n  return (\r\n    <Menu mode={props.mode}>\r\n    <Menu.Item key=\"mail\">\r\n      <a href=\"/\">Home</a>\r\n    </Menu.Item>\r\n    <Menu.Item key=\"subscription\">\r\n      <a href=\"/subscription\">Subscription</a>\r\n    </Menu.Item>\r\n  </Menu>\r\n  )\r\n}\r\n\r\nexport default LeftMenu","/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport React from 'react';\r\nimport { Menu } from 'antd';\r\nimport axios from 'axios';\r\nimport { USER_SERVER } from '../../../Config';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { useSelector } from \"react-redux\";\r\n\r\nfunction RightMenu(props) {\r\n  const user = useSelector(state => state.user)\r\n\r\n  const logoutHandler = () => {\r\n    axios.get(`${USER_SERVER}/logout`).then(response => {\r\n      if (response.status === 200) {\r\n        props.history.push(\"/login\");\r\n      } else {\r\n        alert('Log Out Failed')\r\n      }\r\n    });\r\n  };\r\n\r\n  if (user.userData && !user.userData.isAuth) {\r\n    return (\r\n      <Menu mode={props.mode}>\r\n        <Menu.Item key=\"mail\">\r\n          <a href=\"/login\">Signin</a>\r\n        </Menu.Item>\r\n        <Menu.Item key=\"app\">\r\n          <a href=\"/register\">Signup</a>\r\n        </Menu.Item>\r\n      </Menu>\r\n    )\r\n  } else {\r\n    return (\r\n      <Menu mode={props.mode}>\r\n        <Menu.Item key=\"upload\">\r\n          <a href=\"/video/upload\">Video</a>\r\n        </Menu.Item>\r\n        <Menu.Item key=\"logout\">\r\n          <a onClick={logoutHandler}>Logout</a>\r\n        </Menu.Item>\r\n      </Menu>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withRouter(RightMenu);\r\n\r\n","import React, { useState } from 'react';\r\nimport LeftMenu from './Sections/LeftMenu';\r\nimport RightMenu from './Sections/RightMenu';\r\nimport { Drawer, Button, Icon } from 'antd';\r\nimport './Sections/Navbar.css';\r\n\r\nfunction NavBar() {\r\n  const [visible, setVisible] = useState(false)\r\n\r\n  const showDrawer = () => {\r\n    setVisible(true)\r\n  };\r\n\r\n  const onClose = () => {\r\n    setVisible(false)\r\n  };\r\n\r\n  return (\r\n    <nav className=\"menu\" style={{ position: 'fixed', zIndex: 5, width: '100%' }}>\r\n      <div className=\"menu__logo\">\r\n        <a href=\"/\">Logo</a>\r\n      </div>\r\n      <div className=\"menu__container\">\r\n        <div className=\"menu_left\">\r\n          <LeftMenu mode=\"horizontal\" />\r\n        </div>\r\n        <div className=\"menu_rigth\">\r\n          <RightMenu mode=\"horizontal\" />\r\n        </div>\r\n        <Button\r\n          className=\"menu__mobile-button\"\r\n          type=\"primary\"\r\n          onClick={showDrawer}\r\n        >\r\n          <Icon type=\"align-right\" />\r\n        </Button>\r\n        <Drawer\r\n          title=\"Basic Drawer\"\r\n          placement=\"right\"\r\n          className=\"menu_drawer\"\r\n          closable={false}\r\n          onClose={onClose}\r\n          visible={visible}\r\n        >\r\n          <LeftMenu mode=\"inline\" />\r\n          <RightMenu mode=\"inline\" />\r\n        </Drawer>\r\n      </div>\r\n    </nav>\r\n  )\r\n}\r\n\r\nexport default NavBar","import React from 'react'\r\nimport {Icon} from 'antd';\r\n\r\nfunction Footer() {\r\n    return (\r\n        <div style={{\r\n            height: '80px', display: 'flex',\r\n            flexDirection: 'column', alignItems: 'center',\r\n            justifyContent: 'center', fontSize:'1rem'\r\n        }}>\r\n           <p> Happy Coding  <Icon type=\"smile\" /></p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Footer\r\n","import { Button, Form, Icon, Input, message } from 'antd'\r\nimport TextArea from 'antd/lib/input/TextArea'\r\nimport Title from 'antd/lib/skeleton/Title'\r\nimport Dropzone from 'react-dropzone'\r\nimport React, { useState } from 'react'\r\nimport axios from 'axios'\r\nimport { useSelector } from 'react-redux'\r\n\r\nconst PrivateOptions = [\r\n    {value:0 , label:\"Private\"},\r\n    {value:1 , label:\"Public\"}\r\n]\r\n\r\nconst CategoryOptions = [\r\n    {value:0 , label:\"Film & Animation\"},\r\n    {value:1 , label:\"Autos & Vehicles\"},\r\n    {value:2 , label:\"Music\"},\r\n    {value:3 , label:\"Pets & Animals\"},\r\n]\r\n\r\nexport default function VideoUploadPage(props) {\r\n    const user = useSelector(state => state.user)\r\n    const [VideoTitle , setVideoTitle] = useState(\"\")\r\n    const [Description , setDescription] = useState(\"\")\r\n    const [Private , setPrivate] = useState(0)\r\n    const [Category , setCategory] = useState(\"Film & Animation\")\r\n    const [FilePath , setFilePath] = useState(\"\")\r\n    const [Duration , setDuration] = useState(\"\")\r\n    const [ThumbnailPath , setThumbnailPath] = useState(\"\")\r\n\r\n    const onTitleChange = (e) => {\r\n        setVideoTitle(e.currentTarget.value)\r\n    }\r\n\r\n    const onDescriptionChange = (e) => {\r\n        setDescription(e.currentTarget.value)\r\n    }\r\n\r\n    const onPrivateChange = (e) => {\r\n        setPrivate(e.currentTarget.value)\r\n    }\r\n\r\n    const onCategoryChange = (e) => {\r\n        setCategory(e.currentTarget.value)\r\n    }\r\n\r\n    const onDrop = (files) => {\r\n        let formData = new FormData\r\n        const config = {\r\n            header: {'content-type' : 'multipart/form-data'}\r\n        }\r\n        formData.append('file' , files[0])\r\n        axios.post('/api/video/uploadfiles' , formData , config)\r\n        .then(response => {\r\n            if(response.data.success) {\r\n                let variable = {\r\n                    url:response.data.url,\r\n                    fileName: response.data.fileName\r\n                }\r\n                setFilePath(response.data.url)\r\n                axios.post('/api/video/thumbnail' , variable)\r\n                .then(response => {\r\n                    if(response.data.success) {\r\n                        setDuration(response.data.fileDuration)\r\n                        setThumbnailPath(response.data.url)\r\n                    } else {\r\n                        alert('썸네일 생성에 실패했습니다.')\r\n                    }\r\n                })\r\n            } else {\r\n                alert('비디오 업로드를 실패했습니다.')\r\n            }\r\n        })\r\n    }\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault();\r\n        const variables = {\r\n            writer:user.userData._id,\r\n            title:VideoTitle,\r\n            description:Description,\r\n            privacy:Private,\r\n            filePath:FilePath,\r\n            category:Category,\r\n            duration:Duration,\r\n            thumbnail:ThumbnailPath,\r\n        }\r\n        axios.post('/api/video/uploadVideo' , variables)\r\n        .then(response => {\r\n            if(response.data.success) {\r\n                message.success('성공적으로 업로드를 했습니다.')\r\n                setTimeout(() => {\r\n                    props.history.push('/')\r\n                },3000)\r\n            } else {\r\n                alert('비디오 업로드에 실패 했습니다.')\r\n            }\r\n            \r\n        })\r\n    }\r\n\r\n    return (\r\n        <div style={{maxWidth:'700px' , margin:\"2rem auto\"}}>\r\n            <div style={{textAlign:'center' , marginBottom:'2rem'}}>\r\n                <Title level={2}>Upload Video</Title>\r\n            </div>\r\n            <Form onSubmit={onSubmit}>\r\n                <div style={{display:'flex' , justifyContent:'space-between'}}>\r\n                    <Dropzone onDrop={onDrop} multiple={false} maxSize={10000000}>\r\n                        {({getRootProps , getInputProps}) => (\r\n                            <div style={{width:'300px' , height:'240px' , display:'flex', border:'1px solid lightgray' , alignItems:'center' , justifyContent:'center'}} {...getRootProps()}>\r\n                                <input {...getInputProps()} />\r\n                                <Icon type=\"plus\" style={{fontSize:'3rem'}} />\r\n                            </div>\r\n                        )}\r\n                    </Dropzone>\r\n                    {ThumbnailPath &&\r\n                        <div>\r\n                            <img src={`http://localhost:5000/${ThumbnailPath}`} alt=\"thumbnail\"/>\r\n                        </div>\r\n                    }\r\n                    \r\n                </div>\r\n                <br/>\r\n                <br/>\r\n                <label>Title</label>\r\n                <Input onChange={onTitleChange} value={VideoTitle} />\r\n                <br/>\r\n                <br/>\r\n                <TextArea onChange={onDescriptionChange} value={Description} />\r\n                <br/>\r\n                <br/>\r\n                <select onChange={onPrivateChange}>\r\n                    {PrivateOptions.map((item , index) => (\r\n                        <option key={index} value={item.value}>{item.label}</option>\r\n                    ))}\r\n                </select>\r\n                <br/>\r\n                <br/>\r\n                <select onChange={onCategoryChange}>\r\n                    {CategoryOptions.map((item , index) => (\r\n                        <option key={index} value={item.value}>{item.label}</option>\r\n                    ))}\r\n                </select>\r\n                <br/>\r\n                <br/>\r\n                <Button type=\"primary\" size=\"large\" onClick={onSubmit}>Submit</Button>\r\n            </Form>\r\n        </div>\r\n    )\r\n} ","import { Icon, Tooltip } from 'antd'\r\nimport Axios from 'axios'\r\nimport React, { useEffect, useState } from 'react'\r\nexport default function LikeDislikes({video , videoId , userId , commentId}) {\r\n    const [Likes, setLikes] = useState(0)\r\n    const [LikeAction,setLikeAction] = useState(null)\r\n    const [Dislikes,setDislikes] = useState(0)\r\n    const [DisLikeAction,setDisLikeAction] = useState(null)\r\n    let variable = {}\r\n    useEffect(() => {\r\n        if(video) {\r\n            variable = {videoId ,userId}\r\n        } else {\r\n            variable = {commentId , userId}\r\n        }\r\n        Axios.post('/api/like/getLikes',variable)\r\n        .then(response => {\r\n            if(response.data.success) {\r\n                // 얼마나 많은 좋아요를 받았는지\r\n                setLikes(response.data.likes.length)\r\n\r\n                // 내가 좋아요를 눌렀는지\r\n                response.data.likes.map(like => {\r\n                    if(like.userId === userId) {\r\n                        setLikeAction('liked')\r\n                    }\r\n                })\r\n            } else {\r\n                alert('Likes에 정보를 가져오지 못했습니다.')\r\n            }\r\n        })\r\n        Axios.post('/api/like/getDislikes',variable)\r\n        .then(response => {\r\n            if(response.data.success) {\r\n                // 얼마나 많은 좋아요를 받았는지\r\n                setDislikes(response.data.dislikes.length)\r\n\r\n                // 내가 좋아요를 눌렀는지\r\n                response.data.dislikes.map(dislike => {\r\n                    if(dislike.userId === userId) {\r\n                        setDisLikeAction('disliked')\r\n                    }\r\n                })\r\n            } else {\r\n                alert('DisLike 에 정보를 가져오지 못했습니다.')\r\n            }\r\n        })\r\n    },[])\r\n\r\n    const onLike = () => {\r\n        if(LikeAction === null) {\r\n            Axios.post('/api/like/upLike' , variable)\r\n            .then(response => {\r\n                if(response.data.success) {\r\n                    setLikes(Likes + 1)\r\n                    setLikeAction('liked')\r\n                    if(DisLikeAction !== null) {\r\n                        setDisLikeAction(null)\r\n                        setDislikes(Dislikes-1)\r\n                    }\r\n                } else {\r\n                    alert('Like를 올리지 못하였습니다.')\r\n                }\r\n            })\r\n        } else {\r\n            Axios.post('/api/like/unLike' , variable)\r\n            .then(response => {\r\n                if(response.data.success) {\r\n                    setLikes(Likes - 1)\r\n                    setLikeAction(null)\r\n                } else {\r\n                    alert('Like를 내리지 못하였습니다.')\r\n                }\r\n            })\r\n        }\r\n    }\r\n    const onDislike = () => {\r\n        if(DisLikeAction !== null) {\r\n            Axios.post('/api/like/unDislike' , variable)\r\n            .then(response => {\r\n                if(response.data.success) {\r\n                    setDislikes(Dislikes - 1)\r\n                    setDisLikeAction(null)\r\n                } else {\r\n                    alert('dislike을 하지 못하였습니다.')\r\n                }\r\n            })\r\n        } else {\r\n            Axios.post('/api/like/upDislike' , variable)\r\n            .then(response => {\r\n                if(response.data.success) {\r\n                   setDislikes(DisLikeAction +1) \r\n                   setDisLikeAction('disliked')\r\n                   if(LikeAction !== null) {\r\n                       setLikeAction(null)\r\n                       setLikes(Likes -1)\r\n                   }\r\n                } else {\r\n                    alert('dislike을 하지 못하였습니다.')\r\n                }\r\n            })\r\n        }\r\n    }\r\n    return (\r\n        <div>\r\n            <span key=\"comment-basic-like\">\r\n                <Tooltip title=\"Like\">\r\n                    <Icon onClick={onLike} type=\"like\" theme={LikeAction === 'liked' ? 'filled':'outlined'} />\r\n                </Tooltip>\r\n    <span style={{paddingLeft:'8px' , cursor:'auto'}}> {Likes} </span>\r\n            </span>\r\n            <span key=\"comment-basic-dislike\">\r\n                <Tooltip title=\"Dislike\">\r\n                    <Icon onClick={onDislike} type=\"dislike\" theme={DisLikeAction === 'disliked' ? 'filled':'outlined'}  />\r\n                </Tooltip>\r\n                <span style={{paddingLeft:'8px' , cursor:'auto'}}> {Dislikes} </span>\r\n            </span>&nbsp;&nbsp;\r\n        </div>\r\n    )\r\n}","import { Avatar, Comment } from 'antd'\r\nimport Axios from 'axios'\r\nimport React, { useState } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport LikeDislikes from './LikeDislikes'\r\n\r\nexport default function SingleComment({postId , comment , refreshFunction}) {\r\n    const [OpenReply , setOpenReply] = useState(false)\r\n    const [CommentValue , setCommentValue] = useState(\"\")\r\n    const user = useSelector((state) => state.user)\r\n    const onClickReplyOpen = () => {\r\n        setOpenReply(!OpenReply)\r\n    }\r\n    const onHandleChange = (e) => {\r\n        setCommentValue(e.currentTarget.value)\r\n    }\r\n    const onSubmit = (e) => {\r\n        e.preventDefault()\r\n        const variables = {\r\n            content:CommentValue,\r\n            writer: user.userData._id,\r\n            postId: postId,\r\n            responseTo:comment._id,\r\n        }\r\n        Axios.post('/api/comment/saveComment' , variables)\r\n        .then(response => {\r\n            if(response.data.success) {\r\n                refreshFunction(response.data.result)\r\n                setCommentValue(\"\")\r\n                setOpenReply(false)\r\n            } else {\r\n                alert('커맨트를 저장하지 못했습니다.')\r\n            }\r\n        })\r\n    }\r\n    const actions = [\r\n        <LikeDislikes userId={localStorage.getItem('userId')} commentId={comment._id} />\r\n        ,<span onClick={onClickReplyOpen} key=\"comment-basic-reply-to\">Reply to</span>\r\n    ]\r\n    return (\r\n        <div>\r\n            <Comment actions={actions} author={comment.writer.name} avatar={<Avatar src={comment.writer.image} alt={\"WriterImage\"} /> } content={<p>{comment.content}</p>} />\r\n            {OpenReply && <form style={{display:'flex'}} onSubmit={onSubmit}>\r\n                <textarea style={{width:'100%' , borderRadius:'5px'}} onChange={onHandleChange} value={CommentValue} placeholder=\"코멘트를 작성해 주세요\" />\r\n                <br />\r\n                <button style={{width:'20%' , height:'52px'}} onClick={onSubmit} >Submit</button>\r\n            </form>}\r\n        </div>\r\n    )\r\n}","import React, { useEffect, useState } from 'react'\r\nimport SingleComment from './SingleComment'\r\n\r\nexport default function ReplyComment({commentLists,parentCommentId , postId , refreshFunction}) {\r\n    const [ChildCommentNumber , setChildCommentNumber] = useState(0)\r\n    const [OpenReplyComments , setOpenReplyComments] = useState(false)\r\n    useEffect(() => {\r\n        let commentNumber = 0\r\n        commentLists.map((comment) => {\r\n            if(comment.responseTo === parentCommentId) {\r\n                commentNumber++\r\n            }\r\n        })\r\n        setChildCommentNumber(commentNumber)\r\n    },[commentLists])\r\n    const renderReplyComment = (parentCommentId) => (\r\n        commentLists.map((comment) => (\r\n            <>\r\n                { comment.responseTo === parentCommentId &&\r\n                    (\r\n                        <div style={{width:'80%', marginLeft:'40px'}}>\r\n                            <SingleComment postId={postId} refreshFunction={refreshFunction} comment={comment} postId={postId} />\r\n                            <ReplyComment refreshFunction={refreshFunction} commentLists={commentLists} postId={postId} parentCommentId={comment._id} />\r\n                        </div>\r\n                    )\r\n                }\r\n            </>\r\n        ))\r\n    )\r\n    const onHandleChange = () => {\r\n        setOpenReplyComments(!OpenReplyComments)\r\n    }\r\n    return (\r\n        <div>\r\n            {ChildCommentNumber > 0  && <p onClick={onHandleChange} style={{fontSize:'14px' , margin: 0 , color:'gray'}}>View {ChildCommentNumber} more Comment(s)</p>}\r\n            {OpenReplyComments && renderReplyComment(parentCommentId)}\r\n        </div>\r\n    )\r\n}","import Axios from 'axios'\r\nimport React, { useState } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport ReplyComment from './ReplyComment'\r\nimport SingleComment from './SingleComment'\r\n\r\nexport default function Comment({postId , commentLists , refreshFunction}) {\r\n    const videoId = postId\r\n    const user = useSelector(state => state.user)\r\n    const [commentValue , setCommentValue] = useState(\"\")\r\n    const handleClick = (e) => {\r\n        setCommentValue(e.currentTarget.value)\r\n    }\r\n    const onSubmit = (e) => {\r\n        e.preventDefault()\r\n        const variables = {\r\n            content:commentValue,\r\n            writer: user.userData._id,\r\n            postId: videoId\r\n        }\r\n        Axios.post('/api/comment/saveComment' , variables)\r\n        .then(response => {\r\n            if(response.data.success) {\r\n                refreshFunction(response.data.result)\r\n                setCommentValue(\"\")\r\n            } else {\r\n                alert('커맨트를 저장하지 못했습니다.')\r\n            }\r\n        })\r\n    }\r\n    return (\r\n        <div>\r\n            <br />\r\n            <p>Replies</p>\r\n            <hr/>\r\n            {commentLists && commentLists.map((comment , i) => (\r\n                !comment.responseTo && (\r\n                    <>\r\n                        <SingleComment refreshFunction={refreshFunction} comment={comment} postId={postId} />\r\n                        <ReplyComment refreshFunction={refreshFunction} postId={videoId} parentCommentId={comment._id} commentLists={commentLists} />\r\n                    </>\r\n                )\r\n            ))}\r\n            \r\n            <form style={{display:'flex'}} onSubmit={onSubmit}>\r\n                <textarea style={{width:'100%' , borderRadius:'5px'}} onChange={handleClick} value={commentValue} placeholder=\"코멘트를 작성해 주세요\" />\r\n                <br />\r\n                <button style={{width:'20%' , height:'52px'}} onClick={onSubmit} >Submit</button>\r\n            </form>\r\n        </div>\r\n    )\r\n}","import Axios from 'axios'\r\nimport React, { useEffect, useState } from 'react'\r\nexport default function SideVideo() {\r\n    const [sideVideos , setSideVideos] = useState([])\r\n    useEffect(() => {\r\n        Axios.get('/api/video/getVideos')\r\n        .then(response => {\r\n            if(response.data.success) {\r\n                setSideVideos(response.data.videos)\r\n            } else {\r\n                alert('비디오 가져오기를 실패 했습니다.')\r\n            }\r\n        })\r\n    },[])\r\n\r\n    const renderSideVideo = sideVideos.map((video,i) => {\r\n        let minutes = Math.floor(video.duration/60)\r\n        let seconds = Math.floor((video.duration -  minutes*60))\r\n        if(video.writer) {\r\n            return (\r\n                <div key={i} style={{display:'flex' , marginTop:\"3rem\" , padding:'0 2rem'}}>\r\n                    <div style={{width:'40%' , marginRight:'1rem'}}>\r\n                        <a href>\r\n                            <img style={{width:'100%' , height:'100%'}} src={`http://localhost:5000/${video.thumbnail}`} alt=\"thumbnail\" />\r\n                        </a>\r\n                    </div>\r\n                    <div style={{width:'50%'}}>\r\n                        <a href>\r\n                            <span style={{fontSize:'1rem' , color:'black'}}>{video.title}</span>\r\n                            <br/>\r\n                            <span>{video.writer.name}</span>\r\n                            <br/>\r\n                            <span>{video.views} views</span>\r\n                            <br/>\r\n                            <span>{minutes} : {seconds}</span>\r\n                        </a>\r\n                    </div>\r\n                </div>\r\n            )\r\n        } else {\r\n            return null\r\n        }\r\n        \r\n    })\r\n\r\n    return(\r\n        <>\r\n            {renderSideVideo}\r\n        </>\r\n        \r\n    )\r\n}","import Axios from 'axios'\r\nimport React, { useEffect, useState } from 'react'\r\n\r\nexport default function Subscribe({userTo , userFrom}) {\r\n    const [SubscribeNumber , setSubscribeNumber] = useState(0)\r\n    const [Subscribed , setSubscribed] = useState(false)\r\n    useEffect(() => {\r\n        let variable = {\r\n            userTo\r\n        }\r\n        Axios.post('/api/subscribe/subscribeNumber' , variable)\r\n        .then(response => {\r\n            if(response.data.success) {\r\n                setSubscribeNumber(response.data.subscribeNumber)\r\n            } else {\r\n                alert('구독자 수 정보를 받아오지 못했습니다.')\r\n            }\r\n        })\r\n        let subscribedVariable = {userTo}\r\n        Axios.post('/api/subscribe/subscribed' , subscribedVariable)\r\n        .then(response => {\r\n            if(response.data.success) {\r\n                setSubscribed(response.data.subscribed)\r\n            } else {\r\n                alert('정보를 받아오지 못했습니다.')\r\n            }\r\n        })\r\n\r\n    },[])\r\n\r\n    const onSubscribe = () => {\r\n        let subscribedVariable = {\r\n            userTo,\r\n            userFrom\r\n        }\r\n        // 이미 구독중이라면\r\n        if(Subscribed) {\r\n            Axios.post('/api/subscribe/unSubscribe' , subscribedVariable)\r\n            .then(response => {\r\n                if(response.data.success) {\r\n                    setSubscribeNumber(SubscribeNumber-1)\r\n                    setSubscribed(!Subscribed)\r\n                } else {\r\n                    alert('구독 취소 하는 데 실패 했습니다.')\r\n                }\r\n            })\r\n        // 아직 구독중이 아니라면\r\n        } else {\r\n            Axios.post('/api/subscribe/Subscribe' , subscribedVariable)\r\n            .then(response => {\r\n                if(response.data.success) {\r\n                    setSubscribeNumber(SubscribeNumber+1)\r\n                    setSubscribed(!Subscribed)\r\n                } else {\r\n                    alert('구독 하는 데 실패 했습니다.')\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <button onClick={onSubscribe} style={{backgroundColor:`${Subscribed ? '#AAAAAA' : '#CC0000'}` , borderRadius:'4px' , color:'white' , padding:'10px 16px' , fontWeight:'500' , fontSize:'1rem' , textTransform:'uppercase' }}>\r\n                {SubscribeNumber} {Subscribed ? 'Subscribed' : 'Subscribe'}\r\n            </button>\r\n        </div>\r\n    )\r\n}","import { Avatar, Col, List, Row } from 'antd'\r\nimport Axios from 'axios'\r\nimport React, { useEffect, useState } from 'react'\r\nimport Comment from './Sections/Comment'\r\nimport LikeDislikes from './Sections/LikeDislikes'\r\nimport SideVideo from './Sections/SideVideo'\r\nimport Subscribe from './Sections/Subscribe'\r\n\r\nexport default function VideoDetailPage(props) {\r\n    const videoId = props.match.params.videoId\r\n    const [VideoDetail , setVideoDetail] = useState([])\r\n    const [Comments , setComments ] = useState([])\r\n    useEffect(() => {\r\n        const variable = {\r\n            videoId\r\n        }\r\n        Axios.post('/api/video/getVideoDetail',variable)\r\n        .then(response => {\r\n            if(response.data.success) {\r\n                setVideoDetail(response.data.videoDetail)\r\n            } else {\r\n                alert('비디오 정보를 가져오지 못했습니다.')\r\n            }\r\n        })\r\n        Axios.post('/api/comment/getComments' , variable)\r\n        .then(response => {\r\n            if(response.data.success) {\r\n                setComments(response.data.comments)\r\n            } else {\r\n                alert('코멘트 정보를 가져오지 못했습니다')\r\n            }\r\n        })\r\n    },[])\r\n\r\n    const refreshFunction = (newComment) => {\r\n        setComments(Comments.concat(newComment))\r\n    }\r\n\r\n    if(VideoDetail.writer) {\r\n        const subscribeButton = VideoDetail.writer._id !== localStorage.getItem('userId') && <Subscribe userTo={VideoDetail.writer._id} userFrom={localStorage.getItem('userId')} />\r\n        return (\r\n            <Row gutter={[16, 16]}>\r\n                <Col lg={18} xs={24}>\r\n                    <div style={{width: '100%' , padding: '3rem 4rem'}}>\r\n                        <video style={{width:'100%'}} src={`http://localhost:5000/${VideoDetail.filePath}`} controls />\r\n                        <List.Item actions={[<LikeDislikes videoId={videoId} userId={localStorage.getItem('userId')} video />,subscribeButton]}>\r\n                            <List.Item.Meta avatar={<Avatar src={VideoDetail.writer.image}/>} title={VideoDetail.writer.name} description={VideoDetail.description} />\r\n                        </List.Item>\r\n                        <Comment refreshFunction={refreshFunction} commentLists={Comments} postId={videoId} />\r\n                    </div>\r\n                </Col>\r\n                <Col lg={6} xs={24}>\r\n                    <SideVideo />\r\n                </Col>\r\n            </Row>\r\n        )\r\n    } else {\r\n        return (\r\n            null\r\n        )\r\n    }\r\n}","import { Avatar, Col, Row } from 'antd';\r\nimport Meta from 'antd/lib/card/Meta';\r\nimport Title from 'antd/lib/typography/Title';\r\nimport Axios from 'axios';\r\nimport React, { useEffect, useState } from 'react'\r\nimport moment from 'moment'\r\nexport default function SubscriptionPage() {\r\n    const [Video, setVideo] = useState([])\r\n    useEffect(() => {\r\n        let subscriptionVariables = {\r\n            userFrom : localStorage.getItem('userId')\r\n        }\r\n        Axios.post('/api/video/getSubscriptionVideos', subscriptionVariables)\r\n        .then(response => {\r\n            if(response.data.success) {\r\n                setVideo(response.data.videos)\r\n            } else {\r\n                alert('비디오 가져오기를 실패 했습니다.')\r\n            }\r\n        })\r\n    },[])\r\n\r\n    const renderCards = Video.map((video , i) => {\r\n        let minutes = Math.floor(video.duration/60)\r\n        let seconds = Math.floor((video.duration -  minutes*60))\r\n        if(video.writer) {\r\n            return (\r\n                <Col lg={6} md={8} xs={24} key={i}>\r\n                    <a href={`/video/${video._id}`}>\r\n                        <div style={{position:'relative'}}>\r\n                            <img style={{width:'100%'}} src={`http://localhost:5000/${video.thumbnail}`} alt=\"thunmbnail\" />\r\n                            <div className=\"duration\">\r\n                                <span>{minutes} : {seconds}</span>\r\n                            </div>\r\n                        </div>\r\n                    </a>\r\n                    <br/>\r\n                    <Meta avatar={<Avatar src={video.writer.image} />} title={video.title} description=\"\" />\r\n                    <span>{video.writer.name}</span>\r\n                    <br />\r\n            <span style={{marginLeft:'3rem' }}>{video.views} views</span> - <span>{moment(video.createdAt).format(\"MMM Do YY\")}</span>\r\n                </Col>\r\n            )\r\n        } else {\r\n            return (\r\n                null\r\n            )\r\n        }\r\n    })\r\n\r\n    return (\r\n            <div style={{width: '85%' , margin:'3rem auto'}}>\r\n                <Title level={2}>Recommended</Title>\r\n                <hr/>\r\n                <Row gutter={[32,16]}>\r\n                    {renderCards}\r\n                </Row>\r\n            </div>\r\n    )\r\n}","import React, { Suspense } from 'react';\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport Auth from \"../hoc/auth\";\r\n\r\nimport LandingPage from \"./views/LandingPage/LandingPage.js\";\r\nimport LoginPage from \"./views/LoginPage/LoginPage.js\";\r\nimport RegisterPage from \"./views/RegisterPage/RegisterPage.js\";\r\nimport NavBar from \"./views/NavBar/NavBar\";\r\nimport Footer from \"./views/Footer/Footer\"\r\nimport VideoUploadPage from './views/VideoUploadPage/VideoUploadPage';\r\nimport VideoDetailPage from './views/VideoDetailPage/VideoDetailPage';\r\nimport SubscriptionPage from './views/SubscriptionPage/SubscriptionPage';\r\n\r\n\r\nfunction App() {\r\n  return (\r\n    <Suspense fallback={(<div>Loading...</div>)}>\r\n      <NavBar />\r\n      <div style={{ paddingTop: '69px', minHeight: 'calc(100vh - 80px)' }}>\r\n        <Switch>\r\n          <Route exact path=\"/\" component={Auth(LandingPage, null)} />\r\n          <Route exact path=\"/login\" component={Auth(LoginPage, false)} />\r\n          <Route exact path=\"/register\" component={Auth(RegisterPage, false)} />\r\n          <Route exact path=\"/video/upload\" component={Auth(VideoUploadPage, true)} />\r\n          <Route exact path=\"/video/:videoId\" component={Auth(VideoDetailPage , null)} />\r\n          <Route exact path=\"/subscription\" component={Auth(SubscriptionPage , null)} />\r\n        </Switch>\r\n      </div>\r\n      <Footer />\r\n    </Suspense>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import { combineReducers } from 'redux';\r\nimport user from './user_reducer';\r\n\r\nconst rootReducer = combineReducers({\r\n    user,\r\n});\r\n\r\nexport default rootReducer;","import {\r\n    LOGIN_USER,\r\n    REGISTER_USER,\r\n    AUTH_USER,\r\n    LOGOUT_USER,\r\n} from '../_actions/types';\r\n \r\n\r\nexport default function(state={},action){\r\n    switch(action.type){\r\n        case REGISTER_USER:\r\n            return {...state, register: action.payload }\r\n        case LOGIN_USER:\r\n            return { ...state, loginSucces: action.payload }\r\n        case AUTH_USER:\r\n            return {...state, userData: action.payload }\r\n        case LOGOUT_USER:\r\n            return {...state }\r\n        default:\r\n            return state;\r\n    }\r\n}","import 'react-app-polyfill/ie9';\r\nimport 'react-app-polyfill/ie11';\r\nimport 'core-js';\r\n\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './components/App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { BrowserRouter } from \"react-router-dom\";\r\n\r\nimport Reducer from './_reducers';\r\nimport { Provider } from 'react-redux';\r\nimport { createStore, applyMiddleware } from 'redux';\r\nimport promiseMiddleware from 'redux-promise';\r\nimport ReduxThunk from 'redux-thunk';\r\n\r\nconst createStoreWithMiddleware = applyMiddleware(promiseMiddleware, ReduxThunk)(createStore);\r\n\r\nReactDOM.render(\r\n    <Provider\r\n        store={createStoreWithMiddleware(\r\n            Reducer,\r\n            window.__REDUX_DEVTOOLS_EXTENSION__ &&\r\n            window.__REDUX_DEVTOOLS_EXTENSION__()\r\n        )}\r\n    >\r\n        <BrowserRouter>\r\n            <App />\r\n        </BrowserRouter>\r\n    </Provider>\r\n    , document.getElementById('root'));\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}